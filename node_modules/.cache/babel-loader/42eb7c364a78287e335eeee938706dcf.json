{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\latest all projects\\\\red-onion\\\\src\\\\components\\\\CheckoutForm\\\\CheckoutForm.js\";\nimport React from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useState } from 'react';\n\nconst CheckoutForm = props => {\n  const [paymentError, setPaymentError] = useState(null);\n  const [paymentFinished, setPaymentFinished] = useState(null);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (error) {\n      setPaymentError(error.message);\n      setPaymentFinished(null);\n    } else {\n      setPaymentFinished(paymentMethod);\n      const payment = {\n        id: paymentMethod.id,\n        last4: paymentMethod.card.last4\n      };\n      props.handlePlaceOrder(payment);\n      setPaymentError(null);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Pay\"), paymentError && React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, paymentError), paymentFinished && React.createElement(\"p\", {\n    style: {\n      color: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Payment Successfull\"));\n};\n\nexport default CheckoutForm;","map":{"version":3,"sources":["C:/Web Development/latest all projects/red-onion/src/components/CheckoutForm/CheckoutForm.js"],"names":["React","CardElement","useStripe","useElements","useState","CheckoutForm","props","paymentError","setPaymentError","paymentFinished","setPaymentFinished","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","message","payment","id","last4","handlePlaceOrder","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,WADJ,EAEIC,SAFJ,EAGIC,WAHJ,QAIO,yBAJP;AAKA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAMO,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoBpB,WAApB;AAF0D,KAA3B,CAArC;;AAIA,QAAGe,KAAH,EAAS;AACLR,MAAAA,eAAe,CAACQ,KAAK,CAACM,OAAP,CAAf;AACAZ,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,KAHD,MAII;AACAA,MAAAA,kBAAkB,CAACO,aAAD,CAAlB;AACA,YAAMM,OAAO,GAAG;AAACC,QAAAA,EAAE,EAAEP,aAAa,CAACO,EAAnB;AAAuBC,QAAAA,KAAK,EAAER,aAAa,CAACG,IAAd,CAAmBK;AAAjD,OAAhB;AACAnB,MAAAA,KAAK,CAACoB,gBAAN,CAAuBH,OAAvB;AACAf,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AAEJ,GAjBD;;AAmBA,SACI;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFA,EAMIJ,YAAY,IAAI;AAAG,IAAA,KAAK,EAAE;AAACoB,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BpB,YAA1B,CANpB,EASIE,eAAe,IAAI;AAAG,IAAA,KAAK,EAAE;AAACkB,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATvB,CADJ;AAcH,CAvCD;;AAyCA,eAAetB,YAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n    CardElement,\r\n    useStripe,\r\n    useElements,\r\n} from '@stripe/react-stripe-js';\r\nimport { useState } from 'react';\r\n\r\nconst CheckoutForm = (props) => {\r\n    const [paymentError, setPaymentError] = useState(null);\r\n    const [paymentFinished, setPaymentFinished] = useState(null);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n        type: 'card',\r\n        card: elements.getElement(CardElement),\r\n        });\r\n        if(error){\r\n            setPaymentError(error.message);\r\n            setPaymentFinished(null);\r\n        }\r\n        else{\r\n            setPaymentFinished(paymentMethod);\r\n            const payment = {id: paymentMethod.id, last4: paymentMethod.card.last4}\r\n            props.handlePlaceOrder(payment);\r\n            setPaymentError(null);\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <CardElement />\r\n        <button type=\"submit\" disabled={!stripe}>\r\n            Pay\r\n        </button>\r\n        {\r\n            paymentError && <p style={{color:'red'}}>{paymentError}</p>\r\n        }\r\n        {\r\n            paymentFinished && <p style={{color:'green'}}>Payment Successfull</p>\r\n        }\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CheckoutForm;"]},"metadata":{},"sourceType":"module"}