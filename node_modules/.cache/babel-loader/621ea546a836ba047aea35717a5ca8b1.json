{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\latest all projects\\\\red-onion\\\\src\\\\components\\\\Shipment\\\\Shipment.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport { getDatabaseCart, clearLocalShoppingCart } from '../../utilities/databaseManager';\nimport CheckoutForm from '../CheckoutForm/CheckoutForm';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useAuth } from '../Login/UseAuth';\n\nconst Shipment = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [shipInfo, setShipInfo] = useState(null);\n  const [orderId, setOrderId] = useState(null);\n  const auth = useAuth();\n  const stripePromise = loadStripe('pk_test_IZQbJffjpldskrhIZwmHE4uk00YjXafcWn');\n\n  const onSubmit = data => {\n    setShipInfo(data);\n  };\n\n  const handlePlaceOrder = payment => {\n    const saveCart = getDatabaseCart();\n    const orderfDetails = {\n      email: auth.user.email,\n      cart: saveCart,\n      shipment: shipInfo,\n      payment: payment\n    };\n    fetch('https://glacial-woodland-72025.herokuapp.com/placeOrder', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderfDetails)\n    }).then(res => res.json()).then(order => {\n      console.log('from database', order._id);\n      setOrderId(order._id);\n      clearLocalShoppingCart();\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up pt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: shipInfo && 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center pt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Shipment Information\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"py-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"name\",\n    className: \"form-control\",\n    defaul: \"true\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), errors.name && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Name is required\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"email\",\n    className: \"form-control\",\n    defaul: \"true\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), errors.email && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Email is required\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"address1\",\n    className: \"form-control\",\n    defaul: \"true\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Address One\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), errors.address1 && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Email is required\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"address2\",\n    className: \"form-control\",\n    defaul: \"true\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Address Two\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), errors.address2 && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Email is required\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"city\",\n    className: \"form-control\",\n    defaul: \"true\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"City\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), errors.city && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Email is required\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"country\",\n    className: \"form-control\",\n    defaul: \"true\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), errors.country && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Email is required\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"zipcode\",\n    className: \"form-control\",\n    defaul: \"true\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Zip Code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), errors.zipcode && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Email is required\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger btn-block\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"div\", {\n    className: \"option text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: {\n      marginTop: '200px',\n      display: shipInfo ? 'block' : 'none'\n    },\n    className: \"justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Payment Information\"), React.createElement(Elements, {\n    stripe: stripePromise,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(CheckoutForm, {\n    handlePlaceOrder: handlePlaceOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), orderId && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Thank you for shopping with us\"), React.createElement(\"p\", {\n    className: \"text-center text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Your order is: \", orderId)))));\n};\n\nexport default Shipment;","map":{"version":3,"sources":["C:/Web Development/latest all projects/red-onion/src/components/Shipment/Shipment.js"],"names":["React","useForm","useState","getDatabaseCart","clearLocalShoppingCart","CheckoutForm","Elements","loadStripe","useAuth","Shipment","register","handleSubmit","errors","shipInfo","setShipInfo","orderId","setOrderId","auth","stripePromise","onSubmit","data","handlePlaceOrder","payment","saveCart","orderfDetails","email","user","cart","shipment","fetch","method","headers","body","JSON","stringify","then","res","json","order","console","log","_id","display","required","name","address1","address2","city","country","zipcode","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\nimport { getDatabaseCart, clearLocalShoppingCart} from '../../utilities/databaseManager';\r\nimport CheckoutForm from '../CheckoutForm/CheckoutForm';\r\nimport {Elements,} from '@stripe/react-stripe-js';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport { useAuth } from '../Login/UseAuth';\r\n\r\nconst Shipment = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [shipInfo, setShipInfo] = useState(null);\r\n    const [orderId, setOrderId] = useState(null);\r\n    const auth = useAuth();\r\n    const stripePromise = loadStripe('pk_test_IZQbJffjpldskrhIZwmHE4uk00YjXafcWn'); \r\n\r\n    const onSubmit = data => { \r\n        setShipInfo(data);\r\n    }\r\n\r\n    const handlePlaceOrder = (payment) => {\r\n        const saveCart = getDatabaseCart();\r\n        const orderfDetails = {\r\n            email: auth.user.email, \r\n            cart:saveCart,\r\n            shipment: shipInfo,\r\n            payment: payment\r\n        };\r\n        fetch('https://glacial-woodland-72025.herokuapp.com/placeOrder', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(orderfDetails)\r\n        })\r\n        .then(res => res.json())\r\n        .then(order => {\r\n            console.log('from database', order._id);\r\n            setOrderId(order._id);\r\n            clearLocalShoppingCart();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-up pt-5\">\r\n            <div className=\"container\">\r\n                <div style={{display: shipInfo && 'none'}} >\r\n                    <h3 className=\"text-center pt-5\">Shipment Information</h3>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"py-5\">\r\n                        <div className=\"form-group\">\r\n                            <input name=\"name\" className=\"form-control\" defaul=\"true\" ref={register({ required: true })} placeholder=\"Name\" />\r\n                            {errors.name && <span className=\"error\">Name is required</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input name=\"email\" className=\"form-control\" defaul=\"true\" ref={register({ required: true })} placeholder=\"Email\"/>\r\n                            {errors.email && <span className=\"error\">Email is required</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input name=\"address1\" className=\"form-control\" defaul=\"true\" ref={register({ required: true })} placeholder=\"Address One\"/>\r\n                            {errors.address1 && <span className=\"error\">Email is required</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input name=\"address2\" className=\"form-control\" defaul=\"true\" ref={register({ required: true })} placeholder=\"Address Two\"/>\r\n                            {errors.address2 && <span className=\"error\">Email is required</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input name=\"city\" className=\"form-control\" defaul=\"true\" ref={register({ required: true })} placeholder=\"City\"/>\r\n                            {errors.city && <span className=\"error\">Email is required</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input name=\"country\" className=\"form-control\" defaul=\"true\" ref={register({ required: true })} placeholder=\"Country\"/>\r\n                            {errors.country && <span className=\"error\">Email is required</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input name=\"zipcode\" className=\"form-control\" defaul=\"true\" ref={register({ required: true })} placeholder=\"Zip Code\"/>\r\n                            {errors.zipcode && <span className=\"error\">Email is required</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-danger btn-block\"  type=\"submit\">Submit</button>\r\n                        </div>\r\n                        <div className=\"option text-center\">\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div style={{marginTop: '200px', display: shipInfo ? 'block' : 'none'}} className=\"justify-content-center\" >\r\n                    <h3 className=\"text-center mt-5\">Payment Information</h3>\r\n                    <Elements stripe={stripePromise}>\r\n                        <CheckoutForm handlePlaceOrder={handlePlaceOrder}>\r\n                        </CheckoutForm>\r\n                    </Elements>\r\n                    <br/>\r\n                    {\r\n                        orderId && \r\n                        <div>\r\n                            <h3 className=\"text-center\">Thank you for shopping with us</h3>\r\n                            <p className=\"text-center text-success\">Your order is: {orderId}</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shipment;"]},"metadata":{},"sourceType":"module"}