{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\latest all projects\\\\red-onion\\\\src\\\\components\\\\Login\\\\UseAuth.js\";\nimport React from 'react';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from '../../firebase.config';\nim;\nimport { useState, createContext } from \"react\";\nimport { useContext } from 'react';\nimport { useEffect } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nfirebase.initializeApp(firebaseConfig);\nconst AuthContext = createContext();\nexport const AuthContextProvider = props => {\n  const auth = Auth();\n  return React.createElement(AuthContext.Provider, {\n    value: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.children);\n};\nexport const useAuth = () => useContext(AuthContext);\nexport const PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  const auth = useAuth();\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => auth.user ? children : React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nconst Auth = () => {\n  const [user, setUser] = useState(null);\n\n  const signInUser = (email, password) => {\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      window.history.back();\n      return response.user;\n    }).catch(err => {\n      console.log(err.message);\n      setUser(null);\n      return err.message;\n    });\n  };\n\n  const createUser = (email, password, name) => {\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(res => {\n      firebase.auth().currentUser.updateProfile({\n        displayName: name,\n        email: email\n      }).then(() => {\n        setUser(res.user);\n        window.history.back();\n      });\n    }).catch(err => setUser({\n      error: err.message\n    }));\n  };\n\n  const signOut = () => {\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    }); // Cleanup subscription on unmount\n\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    signInUser,\n    createUser,\n    signOut\n  };\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Web Development/latest all projects/red-onion/src/components/Login/UseAuth.js"],"names":["React","firebase","firebaseConfig","im","useState","createContext","useContext","useEffect","Route","Redirect","initializeApp","AuthContext","AuthContextProvider","props","auth","Auth","children","useAuth","PrivateRoute","rest","location","user","pathname","state","from","setUser","signInUser","email","password","signInWithEmailAndPassword","then","response","window","history","back","catch","err","console","log","message","createUser","name","createUserWithEmailAndPassword","res","currentUser","updateProfile","displayName","error","signOut","unsubscribe","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from '../../firebase.config';\r\nim\r\nimport { useState, createContext } from \"react\";\r\nimport { useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst AuthContext = createContext();\r\nexport const AuthContextProvider = (props) => {\r\n    const auth = Auth();\r\n    return <AuthContext.Provider value={auth}>{props.children}</AuthContext.Provider>\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const PrivateRoute = ({ children, ...rest }) => {\r\n    const auth = useAuth();\r\n    return (\r\n    <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n        auth.user ? (\r\n            children\r\n        ) : (\r\n            <Redirect\r\n            to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n            }}\r\n            />\r\n        )\r\n        }\r\n    />\r\n    );\r\n}\r\n\r\nconst Auth = () => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    const signInUser = (email, password) => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                setUser(response.user);\r\n                window.history.back(); \r\n                return response.user;\r\n        })\r\n        .catch(err => {\r\n            console.log(err.message);\r\n            setUser(null);\r\n            return err.message;\r\n        })\r\n    };\r\n\r\n    const createUser = (email, password, name) => {\r\n        return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            firebase.auth().currentUser.updateProfile({\r\n                displayName: name,\r\n                email: email\r\n            }).then(() => {\r\n                setUser(res.user);\r\n                window.history.back(); \r\n            });\r\n        })\r\n        .catch(err=> setUser({error: err.message}))\r\n    }\r\n\r\n    const signOut = () => {\r\n        return firebase.auth().signOut()\r\n        .then(() => {\r\n            setUser(false);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                setUser(user);\r\n            } \r\n            else {\r\n                setUser(false);\r\n            }\r\n        });\r\n    \r\n        // Cleanup subscription on unmount\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return{\r\n        user,\r\n        signInUser,\r\n        createUser,\r\n        signOut\r\n    };\r\n}\r\n\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}